        public void DisplayGraphicGridObjects(Graphics graphics)
        {
            String buttonSpaces = "";
            String oldButtonName = "";
            boolean drewBackground = false;
            double currentX = 0;
            double currentY = 0;
            int fontWidth = 0;
            int innerWidth = 0;
            
    
                    
            islandSoftwareEngine.GridScreenDetails appGridDetails = (islandSoftwareEngine.GridScreenDetails) _islandApplicationManager.ApplicationEngine.GetDisplayGridFromName(_islandApplicationManager.currentGrid);
                                            
            // set th grid color
            graphics.setColor(appGridDetails.GridColor);
                                            
            if(!drewBackground)
            {
                if(_debug)
                {
                    if(appGridDetails.GridColor ==Color.BLACK)
                    {
                        System.out.println("[Drawing Background]The layout color here is: Black");
                    }
                                                        
                    if(appGridDetails.GridColor == Color.WHITE)
                    {
                        System.out.println("[Drawing Background]The layout color here is: White");
                    }
                }
                                                
                // paint the grid background area
                graphics.fillRect(appGridDetails.GetGridOriginX(), appGridDetails.GetGridOriginY(), appGridDetails.GetGridWidth(),appGridDetails.GetGridHeight());
                drewBackground = true;
            }

            if(_debug)
            {
                System.out.println("[INFO] this is the current screen name:"+appGridDetails.ScreenName);
                System.out.println("[INFO] this is the grid width:"+appGridDetails.GetGridWidth());
                System.out.println("[INFO] this is the grid height:"+appGridDetails.GetGridHeight());
            }  
                                            
            // Get Loaded Layouts for Screen
            Enumeration appLayouts = appGridDetails.GetScreenLayouts(appGridDetails.ScreenName);
                                            
            for(Enumeration en = appLayouts; en.hasMoreElements();)
            {
                islandSoftwareEngine.DisplayLayoutDetails appLayoutDetails = (islandSoftwareEngine.DisplayLayoutDetails) en.nextElement();
                                                
                 if(_debug)
                 {
                    System.out.println("[INFO] this is the current layout name:"+appLayoutDetails.Name);
                    System.out.println("[INFO] this is the current layout details placementX&placementY:"+appLayoutDetails.GetPlacementX()+"&"+appLayoutDetails.GetPlacementY());
                    System.out.println("[INFO] this is the layout height and wdth:"+appLayoutDetails.LayoutHeight+"&"+appLayoutDetails.LayoutWidth);
                 }                

                 // Layout value conversion
                 Double dLPx = new Double(appLayoutDetails.GetPlacementX());
                 Double dLPy = new Double(appLayoutDetails.GetPlacementY());
                 Double dLPw = new Double(appLayoutDetails.LayoutWidth);
                 Double dLPh = new Double(appLayoutDetails.LayoutHeight);
                                                
                 // get Loaded Graphics
                 Vector appGraphics = appLayoutDetails.GetLayoutGraphics();
                                                
                 // set the layout color
                 graphics.setColor(appLayoutDetails.LayoutColor);
                                            
                 if(_debug)
                 {
                    if(appLayoutDetails.LayoutColor ==Color.BLACK)
                    {
                        System.out.println("[INFO]The layout color here is: Black");
                    }
                                                    
                    if(appLayoutDetails.LayoutColor == Color.WHITE)
                    {
                        System.out.println("[INFO]The layout color here is: White");
                    }
                 }
                                                
                 // fil the layout background area
                 if(graphics.getColor()==Color.WHITE)
                 {
                    graphics.fillRect(dLPx.intValue(), dLPy.intValue(), dLPw.intValue(),dLPh.intValue());
                 }
                                                
                 // enumerate object container (GuiGraphicDetails)
                 for(Enumeration e = appGraphics.elements(); e.hasMoreElements();)
                 {
                    // paint graphics
                    islandSoftwareEngine.GraphicGuiDetails appGraphicDetails = (islandSoftwareEngine.GraphicGuiDetails) e.nextElement();
                                                    
                    if(appGraphicDetails !=null)
                    {
                                                        
                        // Graphic value conversion
                        Double dPx = new Double(appGraphicDetails.PlacementX());
                        Double dPy = new Double(appGraphicDetails.PlacementY());
                        Double dLx = new Double(appGraphicDetails.LocationX());
                        Double dLy = new Double(appGraphicDetails.LocationY());
                                                        
                        if(appGraphicDetails.GraphicsObject instanceof Bitmap)
                        {
                            Bitmap bmp = (Bitmap) appGraphicDetails.GraphicsObject;
                                                            
                            if(bmp!=null)
                            {
                                if(_debug)
                                {
                                    System.out.println("[INFO] this is the current details name:"+appGraphicDetails.Name);
                                                                    
                                    if(appGraphicDetails.Location!=null)
                                    {
                                        System.out.println("[INFO] this is the current details locationX&locationY:"+appGraphicDetails.LocationX()+"&"+appGraphicDetails.LocationY());
                                    }
                                                                    
                                    if(appGraphicDetails.Placement!=null)
                                    {
                                        System.out.println("[INFO] this is the current details placementX&placementY:"+appGraphicDetails.PlacementX()+"&"+appGraphicDetails.PlacementY());
                                    }
                                 }
                                                                    
                                 if(appGraphicDetails.Name.equals("Background_Image"))
                                 {   
                                    if(_debug)
                                    {
                                        System.out.println("[ERROR] Trying to Draw a Background Image!!!");
                                    }
                                 }
                                 else
                                 {
                                    // Not a Background Image
                                    if((appGraphicDetails.Location!=null)&&(appGraphicDetails.Placement!=null))
                                    {
                                        if(appGraphicDetails.Event == null)
                                        {
                                            appGraphicDetails.Event = "";
                                        }
                                                                        
                                        if(!appGraphicDetails.Event.equals("Removal"))
                                        {
                                            if(_debug)
                                            {
                                                System.out.println("[INFO] img width and height:"+bmp.getWidth()+"&"+ bmp.getHeight());
                                                System.out.println("[INFO] appGraphicDetails width and height:"+appGraphicDetails.width+"&"+ appGraphicDetails.height);
                                            }
                                                                            
                                            //Now we draw the bitmap:
                                            int useThisWidth = ((int) (appGraphicDetails.width + 0.5F)) - 2;
                                            int useThisHeight = ((int) (appGraphicDetails.height + 0.5F)) - 2;
                                            int textHCenter = ((int) ((useThisWidth / 2) +  + 0.5F)) + dPx.intValue();
                                            int textVCenter = ((int) ((useThisHeight / 2) + 0.5F)) + dPy.intValue();
                                            String buttonName = appGraphicDetails.Name;
                                                                                
                                            //Before drawing the bitmap, we need to create a new sized image to match our placement box:
                                            Bitmap sizedMap = islandSoftwareEngine.resizeBitmap(bmp,useThisWidth,useThisHeight);
                                                                            
                                            graphics.drawBitmap(dPx.intValue(),dPy.intValue(),useThisWidth,useThisHeight,sizedMap, dLx.intValue(),dLy.intValue());
                                                                            
                                            //Next we add text if warranted:
                                            if(appGraphicDetails.HasText)
                                            {
                                                String thisText =  appGraphicDetails.ObjectText.replace('\n',' ').trim();
                                                                                
                                                if(_debug)
                                                {
                                                    System.out.println("[TOLA] The Graphic Text is: " + thisText);
                                                    System.out.println("[TOLA] The X,Y for this button is: " + String.valueOf(dPx) + "," + String.valueOf(dPy));
                                                    if(appGraphicDetails.ObjectColor==Color.BLACK)
                                                    {
                                                        System.out.println("[INFO] Current Graphic Object Color is: BLACK");
                                                    }
                                                                                    
                                                    if(appGraphicDetails.ObjectColor==Color.WHITE)
                                                    {
                                                        System.out.println("[INFO] Current Graphic Object Color is: WHITE");
                                                    } 
                                                }
                                                                                
                                                Font newFont = Font.getDefault().derive(Font.BOLD,((int) ((useThisHeight / 2) + 0.5F)));
                                                graphics.setColor(Color.WHITE);
                                                graphics.setFont(newFont);
                                                                                
                                                if(thisText.indexOf("\\u") > -1)
                                                {
                                                    try
                                                    {
                                                        if(_debug)
                                                        {
                                                            System.out.println("Base Value to be converted: "+ thisText);
                                                        }
                                                        
                                                        String newValue = "";
                                                        String convertValue = thisText.substring(thisText.indexOf("\\u")+2,thisText.indexOf(";"));
                                                        //We need to convert the value to unicode
                                                        short valueAsShort = Short.parseShort(convertValue.trim(),16);
                                                        newValue = String.valueOf((char)valueAsShort);
                                                        
                                                        while(thisText.length() > thisText.indexOf(";")+1)
                                                        {
                                                            thisText = thisText.substring(thisText.indexOf(";") + 1);
                                                            convertValue = thisText.substring(thisText.indexOf("\\u")+2,thisText.indexOf(";"));
                                                            //We need to convert the value to unicode
                                                            valueAsShort = Short.parseShort(convertValue.trim(),16);
                                                            newValue += String.valueOf((char)valueAsShort);
                                                        }
                                                        
                                                        buttonName = newValue;
                                                        
                                                        if(_debug)
                                                        {
                                                            System.out.println("Converted Value: "+ newValue);
                                                        }
                                                        graphics.drawText(newValue, dPx.intValue(),textVCenter,DrawStyle.HCENTER | DrawStyle.VCENTER, useThisWidth);
                                                    }
                                                    catch(Exception exU)
                                                    {
                                                        if(_debug)
                                                        {
                                                            System.out.println("[ERROR] Converting to Unicode failed: "+exU.toString());
                                                            exU.printStackTrace();
                                                        }
                                                    }
                                                }
                                                else
                                                {                             
                                                    buttonName = thisText;
                                                    graphics.drawText(thisText, dPx.intValue(),textVCenter,DrawStyle.HCENTER | DrawStyle.VCENTER, useThisWidth);
                                                }
                                                                                
                                                if(_debug)
                                                {
                                                    if(graphics.getColor()==Color.BLACK)
                                                    {
                                                        System.out.println("[INFO] Wrote out text in BLACK");
                                                    }
                                                                                    
                                                    if(graphics.getColor()==Color.WHITE)
                                                    {
                                                        System.out.println("[INFO] Wrote out text in WHITE");
                                                    } 
                                                    
                                                    System.out.println("[INFO] Text Coordinates (X,Y): " + textHCenter + "," + textVCenter);
                                                }
                                            }
                                            else
                                            {
                                                if(_debug)
                                                {
                                                    System.out.println("[INFO] Graphic Has No Text");
                                                }
                                            }
                                                                            
                                            if(!_loadedLabels)
                                            {
                                                //Finally we add our labels
                                                Hashtable OverflowButton = new Hashtable();
                                                useThisWidth += 2;
                                                //useThisHeight += 2;
                                                //We need to draw labels over our buttons - to do so, we need to create a series of managers to handle our layout:
                                                if(yattaFont == null)
                                                    yattaFont = Font.getDefault().derive(Font.PLAIN,((int) ((this.getVisibleHeight() / 12) + 0.5F)));
                                                int spaceWidth = yattaFont.getAdvance(' ');
                                                
                                                if(_layoutObjectStack.isEmpty())
                                                {
                                                    
                                                    int spacerHeight = this.getVisibleHeight() / 6;  //2 rows...
                                                    
                                                    //We need to create a manager to take up the top two rows:
                                                    if(_debug)
                                                    {
                                                        System.out.println("[LABEL PRINT] Adding textFiller button label");
                                                    }
                                                    
                                                    innerWidth = ((int) ((this.getVisibleWidth() - 5) + 0.5F));
                                                    OverflowButton = new Hashtable();
                                                    OverflowButton.put("Name","Textbox");
                                                    fontWidth = ((int) (((this.getVisibleWidth() - 5) / spaceWidth) + 0.5F));;
                                                    buttonSpaces = "";
                                                    while(fontWidth >= 0)
                                                    {
                                                        buttonSpaces += spaceChar;
                                                        fontWidth -= 1;
                                                    }
                                                    
                                                    OverflowButton.put("Overlay",new YattaButton(innerWidth,"Textbox",spacerHeight,buttonSpaces,_debug));
                                                    _layoutObjectStack.addElement(OverflowButton);
                                                    
                                                }
                                                
                                                
                                                //Next we need to determine what to add into our flow manager:
                                                if(currentX != dPx.doubleValue() && currentY == dPy.doubleValue() && oldButtonName != "")
                                                {
                                                    //There are spaces - anything less than a space who cares?
                                                    if(dPx.doubleValue() - currentX > 1)
                                                    {
                                                        if(dPx.doubleValue() - currentX < 2)
                                                        {
                                                            //In this case, we just assign the space to the old button:
                                                            innerWidth = ((int) ((dPx.doubleValue() - currentX) + 0.5F));
                                                            OverflowButton = new Hashtable();
                                                            OverflowButton.put("Name","old_" + oldButtonName);
                                                            fontWidth = ((int) (((dPx.doubleValue() - currentX) / spaceWidth) + 0.5F));;
                                                            buttonSpaces = "";
                                                            while(fontWidth >= 0)
                                                            {
                                                                buttonSpaces += spaceChar;
                                                                fontWidth -= 1;
                                                            }
                                                            
                                                            OverflowButton.put("Overlay",new YattaButton(innerWidth,oldButtonName,useThisHeight,buttonSpaces,_debug));
                                                            _layoutObjectStack.addElement(OverflowButton);
                                                            
                                                            //We also need to add in the new button label:
                                                            innerWidth = ((int) ((useThisWidth) + 0.5F));
                                                            OverflowButton = new Hashtable();
                                                            OverflowButton.put("Name",buttonName);
                                                            fontWidth = ((int) (((useThisWidth) / spaceWidth) + 0.5F));;
                                                            buttonSpaces = "";
                                                            while(fontWidth >= 0)
                                                            {
                                                                buttonSpaces += spaceChar;
                                                                fontWidth -= 1;
                                                            }
                                                            
                                                            OverflowButton.put("Overlay",new YattaButton(innerWidth,buttonName,useThisHeight,buttonSpaces,_debug));
                                                            _layoutObjectStack.addElement(OverflowButton);
                                                        }
                                                        else
                                                        {
                                                            //We split the difference:
                                                            double halfzies = (dPx.doubleValue() - currentX) / 2;
                                                            //First the old button:
                                                            innerWidth = ((int) ((halfzies) + 0.5F));
                                                            OverflowButton = new Hashtable();
                                                            OverflowButton.put("Name","old_" + oldButtonName);
                                                            fontWidth = ((int) (((halfzies) / spaceWidth) + 0.5F));;
                                                            buttonSpaces = "";
                                                            while(fontWidth >= 0)
                                                            {
                                                                buttonSpaces += spaceChar;
                                                                fontWidth -= 1;
                                                            }
                                                            
                                                            OverflowButton.put("Overlay",new YattaButton(innerWidth,oldButtonName,useThisHeight,buttonSpaces,_debug));
                                                            _layoutObjectStack.addElement(OverflowButton);
                                                            
                                                            //We also need to add in the new button label:
                                                            innerWidth = ((int) ((useThisWidth + halfzies) + 0.5F));
                                                            OverflowButton = new Hashtable();
                                                            OverflowButton.put("Name",buttonName);
                                                            fontWidth = ((int) (((useThisWidth + halfzies) / spaceWidth) + 0.5F));;
                                                            buttonSpaces = "";
                                                            while(fontWidth >= 0)
                                                            {
                                                                buttonSpaces += spaceChar;
                                                                fontWidth -= 1;
                                                            }
                                                            
                                                            OverflowButton.put("Overlay",new YattaButton(innerWidth,buttonName,useThisHeight,buttonSpaces,_debug));
                                                            _layoutObjectStack.addElement(OverflowButton);
                                                        }
                                                    }
                                                    else
                                                    {
                                                        //We add the button like normal:
                                                        OverflowButton = new Hashtable();
                                                        OverflowButton.put("Name",buttonName);
                                                        fontWidth = ((int) ((useThisWidth / spaceWidth) + 0.5F));;
                                                        buttonSpaces = "";
                                                        while(fontWidth >= 0)
                                                        {
                                                            buttonSpaces += spaceChar;
                                                            fontWidth -= 1;
                                                        }
                                                        OverflowButton.put("Overlay",new YattaButton(useThisWidth,buttonName,useThisHeight,buttonSpaces,true));
                                                    
                                                        _layoutObjectStack.addElement(OverflowButton);
                                                    }
                                                }
                                                else
                                                {
                                                    //We add the button like normal:
                                                    OverflowButton = new Hashtable();
                                                    OverflowButton.put("Name",buttonName);
                                                    fontWidth = ((int) ((useThisWidth / spaceWidth) + 0.5F));;
                                                    buttonSpaces = "";
                                                    while(fontWidth >= 0)
                                                    {
                                                        buttonSpaces += spaceChar;
                                                        fontWidth -= 1;
                                                    }
                                                    OverflowButton.put("Overlay",new YattaButton(useThisWidth,buttonName,useThisHeight,buttonSpaces,true));
                                                            
                                                    _layoutObjectStack.addElement(OverflowButton);
                                                }
                                                
                                                //Now we update our information accordingly:
                                                oldButtonName = buttonName;
                                                currentX = dPx.doubleValue() + useThisWidth + 1;
                                                currentY = dPy.doubleValue();
                                            }
                                            
                                            bmp = null;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
