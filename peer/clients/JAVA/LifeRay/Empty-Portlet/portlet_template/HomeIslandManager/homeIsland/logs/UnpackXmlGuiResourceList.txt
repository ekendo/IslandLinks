public boolean UnpackXmlGuiResourceList() 
    {
        boolean unpacked = false;
        KXmlParser parser = null;
        String xmlContent = (String)this.guiResourceList.get(new Integer(islandApplicationResource.XML_GUI_RESOURCE_LIST));
        Hashtable values = null;
        String name = "";
        String value = "";
        Hashtable pngTable = new Hashtable();
        Hashtable imageTable = new Hashtable();
        Hashtable bmpTable = new Hashtable();
        Hashtable audioTable = new Hashtable();
        

        try
        {
            //Remove any unwanted elements...
             this.guiResourceList.clear();
            //This part grabs and loads the XML file
            ByteArrayInputStream is = new ByteArrayInputStream(xmlContent.getBytes());            
            parser = new KXmlParser();
            parser.setInput(is,null);

            //Document doc = docb.parse(is);
            org.kxml2.kdom.Document doc = new org.kxml2.kdom.Document();
            doc.parse(parser);
            parser = null;

            //NodeList nl = doc.getElementsByTagName("Resources");
            //Grab the Resources Element

            Element el = doc.getRootElement();

            if(this.debug) 
            {
                System.out.println("[INFO] Main Groups in XML File: "+el.getChildCount());
            }
                
            //Iterate through Icon, Images and Audio elements here
            String globalHashName = "";

            for(int i=0; i<el.getChildCount(); i++)
            {
                globalHashName = "Icon";
                values = null;
                value = "";

                if(el.getChild(i) instanceof Element)
                {

                    Element ce = (Element) el.getChild(i);

                    if(this.debug)
                    {
                        System.out.println("Name:"+ce.getName());
                    }

                    if(ce.getName().length()>0)
                    {
                        name = ce.getName();
                    }

                    if(ce.getChildCount()>0)
                    {
                        //This For loop iterates through any child elements such as Image or Format
                        for(int j=0; j<ce.getChildCount();j++)
                        {
                            //If the "child" is just a URL, this check will capture it...
                            if(ce.getChild(j) instanceof java.lang.String)
                            {
                                //This only works for the Icon element...
                                if(((String)ce.getChild(j)).length()>0)
                                {
                                    value = (String)ce.getChild(j);
                                    
                                    //Since this only works for the Icon as it is currently constructed, we need to simply add it
                                    if(value.length()>0 && value != "" && value.indexOf("\n") == -1)
                                    {
                                        if(this.debug)
                                        {
                                            System.out.println("Adding " + globalHashName + " and value: " + value + " to the guiResourceList.");
                                        }
                                        this.guiResourceList.put(globalHashName,value);
                                        value = "";
                                    }
                                }
                            }
                            else if(ce.getChild(j) instanceof Element)
                            {
                                //This call will pull up the children of an image or audio file
                                Element cce = (Element) ce.getChild(j);

                                if(this.debug)
                                {
                                    System.out.println("Next Element Name:"+cce.getName());
                                }

                                //We create a new hashtable for each iteration
                                values = new Hashtable();

                                //First we need to grab our main Image Location
                                values.put("URL",cce.getChild(0).toString());

                                if(this.debug)
                                {
                                    System.out.println("Added URL:" + cce.getChild(0).toString() + " to values Hashtable.");
                                }

                                // check attributes
                                if(cce.getAttributeCount()>0)
                                {

                                    for(int q=0; q < cce.getAttributeCount(); q++)
                                    {
                                        if(this.debug)
                                        {

                                            System.out.println("Attribute Name:"+cce.getAttributeName(q).toString());
                                            System.out.println("Attribute Value:"+cce.getAttributeValue(q).toString());
                                        }

                                        if(cce.getAttributeValue(q) != null && cce.getAttributeValue(q).length() > 0 && cce.getAttributeValue(q).toString() != "" && cce.getAttributeValue(q).toString() != "null")
                                        {   
                                            //The original program was built without multiple atrributes in mind
                                            //To overcome this, for now, we add in the Name as a lookup to the URL
                                            if(cce.getAttributeName(q).equals("Name"))
                                            {
                                                name = cce.getAttributeValue(q).toString();
                                                values.put(name,cce.getChild(0).toString());
                                            }
                                            
                                            //We also add in the Name value pair along with everything else
                                            values.put(cce.getAttributeName(q).toString(),cce.getAttributeValue(q).toString());

                                            if(cce.getAttributeName(q).equals("Type"))
                                            {
                                                //We need to determine our global label:
                                                if(cce.getAttributeValue(q).equals("PNG"))
                                                {
                                                    globalHashName = "PngImages";
                                                }
                                                else if(cce.getAttributeValue(q).equals("BMP"))
                                                {
                                                    globalHashName = "BmpImages";
                                                }
                                                else if(cce.getAttributeValue(q).equals("AIFF")) //AIff
                                                {
                                                    globalHashName = "Audio";
                                                }
                                                else if(cce.getAttributeValue(q).equals("JPG"))
                                                {
                                                    globalHashName = "Images";
                                                }
                                                else if(cce.getAttributeValue(q).equals("GIF"))
                                                {
                                                    globalHashName = "Images";
                                                }
                                                else if(cce.getAttributeValue(q).equals("TIFF"))
                                                {
                                                    globalHashName = "Images";
                                                }
                                                else if(cce.getAttributeValue(q).equals("JPEG"))
                                                {
                                                    globalHashName = "Images";
                                                }
                                            }
                                        }
                                    }
                                }
                                //Now that all of the attributes for a given media resource have been captured, we add it to our list:
                                if(values != null)
                                {
                                    if(this.debug)
                                    {
                                        System.out.println("Adding " + name + " to the " + globalHashName + " hashtable.");
                                    }
                
                                    if(globalHashName == "PngImages")
                                        pngTable.put(name,values);
                                    else if(globalHashName == "BmpImages")
                                        bmpTable.put(name,values);
                                    else if(globalHashName == "Audio")
                                        audioTable.put(name,values);
                                    else if(globalHashName == "Images")
                                        imageTable.put(name,values);
                                }
                            }
                        }
                    }
                } 
            }
            //Now we need to add any of our hashtables as required:
            if(!pngTable.isEmpty())
            {
                if(this.debug)
                {
                    System.out.println("There are a total of " + pngTable.size() + " PNG Images.");
                    System.out.println("Adding PNG Images to the guiResourceList");
                }

                this.guiResourceList.put("PngImages",pngTable);
            }
            
            if(!bmpTable.isEmpty())
            {
                if(this.debug)
                {
                    System.out.println("There are a total of " + bmpTable.size() + " BMP Images.");
                    System.out.println("Adding BMP Images to the guiResourceList");
                }

                this.guiResourceList.put("BmpImages",bmpTable);
            }
            
            if(!audioTable.isEmpty())
            {
                if(this.debug)
                {
                    System.out.println("There are a total of " + audioTable.size() + " Audio Files.");
                    System.out.println("Adding Audio Files to the guiResourceList");
                }

                this.guiResourceList.put("Audio",audioTable);
            }
            
            if(!imageTable.isEmpty())
            {
                if(this.debug)
                {
                    System.out.println("There are a total of " + imageTable.size() + " Other Images.");
                    System.out.println("Adding Other Images to the guiResourceList");
                }

                this.guiResourceList.put("Images",imageTable);
            }
        }
        catch(Exception ex)
        {
            if(this.debug)
            {
                System.out.println("[ERROR] problems unpacking xml Resource List in UnpackXmlGuiResourceList method: "+ex.toString());
                ex.printStackTrace();
            }
        }

        if(guiResourceList.size()>0)
        {
            unpacked = true;
        }

        return unpacked;
    }