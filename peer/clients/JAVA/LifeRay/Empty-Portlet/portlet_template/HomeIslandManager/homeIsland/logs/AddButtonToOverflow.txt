public void AddButtonToOverflow(double ButtonWidth, int ButtonHeight, int SpaceWidth, String ButtonName,Font TextFont)
        {
            if(_debug)
            {
                System.out.println("[LABEL PRINT] The Button Name is: " + ButtonName);
                System.out.println("[LABEL PRINT] The Button Width is: " + String.valueOf(ButtonWidth));
                System.out.println("[LABEL PRINT] The Button Height is: " + String.valueOf(ButtonHeight));
                System.out.println("[LABEL PRINT] The Space Width is: " + String.valueOf(SpaceWidth));
            }
            
            int fontWidth = ((int) ((ButtonWidth / SpaceWidth) + 0.5F));;
            
            if(_debug)
            {
                System.out.println("[LABEL PRINT] This button label should be " + fontWidth + " spaces long");
            }
    
            String buttonSpaces = "";
            while(fontWidth >= 0)
            {
                buttonSpaces += " ";
                fontWidth -= 1;
            }
            
            final int innerWidth = ((int) (ButtonWidth + 0.5F));
            final String innerSpaces = buttonSpaces;
            final String innerName = ButtonName;
            final int innerHeight = ButtonHeight;
            final Font innerFont = TextFont;
            
            //Next we create the field
            RichTextField buttonField = new RichTextField(buttonSpaces, RichTextField.FOCUSABLE|RichTextField.READONLY)
            {
                public void layout(int width, int height) {
                    if(_debug)
                    {
                        System.out.println("[BUTTON PRINT] The name is: " + innerName);
                        System.out.println("[BUTTON PRINT] The label is: |" + innerSpaces + "| - (Pipes added to outside)");
                        System.out.println("[BUTTON PRINT] The Width is: " + String.valueOf(innerWidth));
                        System.out.println("[BUTTON PRINT] The Height is: " + String.valueOf(innerHeight));
                    }
                    setExtent(innerWidth, innerHeight);
                }
                
                public String getLabel()
                {
                    return innerName;
                }
                
                public void paint(Graphics tGraph) {
                    //tGraph.setColor(Color.CRIMSON);
                    tGraph.setFont(innerFont);
                    tGraph.drawText(innerSpaces,0,0,tGraph.ELLIPSIS);
                    if(_debug)
                    {
                        System.out.println("[BUTTON PRINT] Painting : " + innerName);
                    }
                    super.paint(tGraph);
                }
            };
            
            //Now we place our textbox - order determines layout position...
            _overFlow.add(buttonField);
        }