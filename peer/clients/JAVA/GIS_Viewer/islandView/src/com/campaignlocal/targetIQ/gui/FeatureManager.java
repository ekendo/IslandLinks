/*
 * FeatureManager.java
 *
 * Created on June 16, 2007, 10:42 AM
 */

package com.campaignlocal.targetIQ.gui;

import bsh.This;
import com.campaignlocal.targetIQ.data.SpatialInfoStore;
import com.campaignlocal.targetIQ.main.ViewerManager;

import org.geotools.map.MapLayer;

/**
 *
 * @author  Administrator
 */
public class FeatureManager extends javax.swing.JPanel {
    
    /* A link to the ViewerManager instance, to pass control back to the 'button*'
     * methods in that instance. */
    private final ViewerManager viewerBase;
    
    private final SpatialInfoStore viewerData;
    
    private final DemographicValueEditor valueEditor;
    
    /** Creates new form FeatureManager */
    public FeatureManager() 
    {
        initComponents();
        
        this.viewerBase = null;
        
        this.viewerData = null;
    
        this.valueEditor = null;
    }
    
    public FeatureManager(ViewerManager vb)
    {
        initComponents();
        
        this.viewerBase = vb;
        
        this.viewerData = null;
    
        this.valueEditor = null;
    }
    
    public FeatureManager(ViewerManager vb, SpatialInfoStore vd)
    {
        initComponents();
        
        this.viewerBase = vb;
    
        this.viewerData = vd;
        
        this.valueEditor = null;
    }
    
    public FeatureManager(ViewerManager vb, DemographicValueEditor dve)
    {
        initComponents();
        
        this.viewerBase = vb;
    
        this.viewerData = null;
        
        this.valueEditor = dve;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox10 = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();

        setFont(new java.awt.Font("Tahoma", 0, 8));
        jTabbedPane1.setToolTipText("Urban Areas");
        jTabbedPane1.setFont(new java.awt.Font("Serif", 0, 10));
        jTabbedPane1.setName("Urban Areas");
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jCheckBox1.setText("Competitors Cars Sold");
        jCheckBox1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });
        jCheckBox1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox1StateChanged(evt);
            }
        });

        jCheckBox10.setText("Cars Sold");
        jCheckBox10.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox10.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBox10.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox10ItemStateChanged(evt);
            }
        });
        jCheckBox10.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox10StateChanged(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(38, 38, 38)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jCheckBox1)
                    .add(jCheckBox10))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .add(jCheckBox10)
                .add(24, 24, 24)
                .add(jCheckBox1)
                .add(29, 29, 29))
        );
        jTabbedPane1.addTab("Points of Interest", jPanel1);

        jCheckBox4.setText("Radio");
        jCheckBox4.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox4.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBox4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox4ItemStateChanged(evt);
            }
        });

        jCheckBox5.setText("TV");
        jCheckBox5.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox5.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBox5.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox5ItemStateChanged(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(36, 36, 36)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jCheckBox4)
                    .add(jCheckBox5))
                .addContainerGap(105, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(19, 19, 19)
                .add(jCheckBox4)
                .add(22, 22, 22)
                .add(jCheckBox5)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jTabbedPane1.addTab("Media Coverage", jPanel2);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox5ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox5ItemStateChanged
        System.out.println("TV item changed");
        
        
        try {
        
            if(valueEditor!=null)
            {
                valueEditor.updateStatusValue("Loading...");
            }
            
            if(evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
                this.viewerBase.tvCoverage(true);
            }
            
            if(evt.getStateChange() == java.awt.event.ItemEvent.DESELECTED) {
                this.viewerBase.tvCoverage(false);
            }
            
            if(valueEditor!=null)
            {
                valueEditor.updateStatusValue("Done");
            }
        } catch(Exception e) {
            System.out.println("ERROR displaying media coverage:"+e.toString());
            e.printStackTrace();
        }
    }//GEN-LAST:event_jCheckBox5ItemStateChanged

    private void jCheckBox4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox4ItemStateChanged
        System.out.println("Radio item changed");
        try 
        {
            
            if(valueEditor!=null)
            {
                valueEditor.updateStatusValue("Loading...");
            }
        
            if(evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
                this.viewerBase.radioCoverage(true);
            }
            
            if(evt.getStateChange() == java.awt.event.ItemEvent.DESELECTED) {
                this.viewerBase.radioCoverage(false);
            }
            
            if(valueEditor!=null)
            {
                valueEditor.updateStatusValue("Done");
            }
        } 
        catch(Exception e) 
        {
            System.out.println("ERROR displaying media coverage:"+e.toString());
            e.printStackTrace();
        }
    }//GEN-LAST:event_jCheckBox4ItemStateChanged

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        System.out.println("COmpetitors cars item changed");
        try {
        
            if(valueEditor!=null)
            {
                valueEditor.updateStatusValue("Loading...");
            }
            
            if(evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
                this.viewerBase.competitorsCarsSold(true);
            }
            
            if(evt.getStateChange() == java.awt.event.ItemEvent.DESELECTED) {
                this.viewerBase.competitorsCarsSold(false);
            }
            
            if(valueEditor!=null)
            {
                valueEditor.updateStatusValue("Done");
            }
        } 
        catch(Exception e) 
        {
            System.out.println("ERROR displaying media coverage:"+e.toString());
            e.printStackTrace();
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jCheckBox1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox1StateChanged
//System.out.println("Competitors Cars checked");
    }//GEN-LAST:event_jCheckBox1StateChanged

    private void jCheckBox10ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox10ItemStateChanged
        System.out.println("cars");
        
        try {
            
            if(valueEditor!=null)
            {
                valueEditor.updateStatusValue("Loading...");
            }
            
            if(evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
                this.viewerBase.carsSold(true);
            }
            
            if(evt.getStateChange() == java.awt.event.ItemEvent.DESELECTED) {
                this.viewerBase.carsSold(false);
            }
            
            if(valueEditor!=null)
            {
                valueEditor.updateStatusValue("Done");
            }
        } catch(Exception e) {
            System.out.println("ERROR displaying media coverage:"+e.toString());
            e.printStackTrace();
        }
    }//GEN-LAST:event_jCheckBox10ItemStateChanged

    private void jCheckBox10StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox10StateChanged
//System.out.println("Cars sold checked");
    }//GEN-LAST:event_jCheckBox10StateChanged

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged

    }//GEN-LAST:event_jTabbedPane1StateChanged
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox10;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
    
    
}
